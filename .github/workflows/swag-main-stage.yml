# https://docs.github.com/en/actions/using-workflows/reusing-workflows

name: Deploy to Staging on Pull Request to Main

on:
  pull_request:
    branches:
      - main
    paths:
      - "apps/**"
      - "packages/**"

  workflow_dispatch:

jobs:
  check_source_branch:
    name: Check Source Branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            if (context.payload.pull_request.head.ref !== "next") {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## :exclamation: You can only merge into **\`main\`** from **\`next\`** not **\`${ context.payload.pull_request.head.ref}\`**.

                ### Please create a new pull request with the **\`next\`** branch as the source.`
              });

              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                state: "closed"
              });

              core.setFailed();
            } else {
              core.info("Head ref is next... continuing.");
            }
  get_changes:
    needs: check_source_branch
    if: success()
    name: Check File Changes
    runs-on: ubuntu-latest
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      web: ${{ steps.filter.outputs.web }}
      packages: ${{ steps.filter.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            docs:
              - 'apps/docs/**'
            web:
              - 'apps/web/**'
            packages:
              - 'packages/**'
  build_and_deploy_docs:
    needs: get_changes
    name: Build and Deploy Docs
    if: ${{ needs.get_changes.outputs.docs == 'true' || needs.get_changes.outputs.packages == 'true' }}
    environment:
      name: staging
      url: https://staging--ibcarr-testing.netlify.app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - run: npm ci --ignore-scripts
      - run: npm install --save-dev netlify-cli
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/apps/docs/.next/cache
          key: ${{ github.ref_name }}-docs-nextjs-cache-${{ github.job }}-${{ github.sha }}
          restore-keys: ${{ github.ref_name }}-docs-nextjs-cache-${{ github.job }}-
      - name: Deploy
        env:
          NETLIFY_SITE_ID: ${{ secrets.DOCS_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        working-directory: ./apps/docs
        run: netlify deploy --build --alias staging
      - uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## :heavy_check_mark: Pull Request Preview: **Docs**.

              ### This pull request preview for **\`docs\`** can be found [here](https://staging--ibcarr-testing.netlify.app).`
            });
